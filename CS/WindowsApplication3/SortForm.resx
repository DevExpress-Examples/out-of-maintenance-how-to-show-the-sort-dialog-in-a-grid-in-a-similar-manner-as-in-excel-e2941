<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v17.2" name="DevExpress.Utils.v17.2, Version=17.2.18.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v17.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMC4yLCBWZXJzaW9uPTEwLjIu
        NS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTY1ZTBkYTIxN2NlZTNkYmMMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAAIEGAAACDAMAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAAIGNIUk0AAHomAACAhAAA+gAAAIDoAAB1MAAA6mAAADqYAAAXcJy6UTwA
        AAKKSURBVDhPZZP5SxRhGMcl86CQLonopIN+6I/ooKikIoKIiAgKoqKgQzvMykrEkiIiMjHoUKgoOsQO
        qRCkSIxKk6R1V13X0nWP1r1ndmZ2v32fcYSJFj48y77P83me552dLABZ1mcCY7bFRMYci1zGPCJRcrKk
        ZhzzixxUNQ2gstGNihduXHzWh/NPe1H+xIWzj50oe+RA6QMH7tU3LJEGxfd//CfIrnjeByMDqHoGEcWA
        P6rBE1DwcyiOzoEoSuq7EU2orprauqWUyIRjza0JcqRbmgLWQ9EyCCcN+CIa3H4FjuEEDt/pQsoAwjGl
        91L1lWUisQtyTz/sgZ6mgGgkkcoglDDgDVPCSQ7WdeJAbQf23/qGvTe/yN4FdkHe8YZus1C6CCqJUxKM
        G/g9qsHpTaLTE8cnZxi7r7eLoNAuyD9yt8ssUnWuYJFkjCgZBGIGflHiGlHwfTCBnVfbRDDTLph06HYH
        pEBIaOxOJMZS3JuSkagBzx8NPZRsv/xBBLPsgsn7ar4iaRVJccwqjlIQIcFEBsMRAwOUbK1sFcFsu6Bg
        z43PZlfpOF4UUdmdjCpAKAn4YmmuomPzhRYRzLELpuy61mYWhplsFnDsYJKws5/4YlzDFBjYcO6dCObZ
        BVN3VH9EIM4Li6fNTr5oGl4iYw+FeYlkMKTDQ9aXNYtggV0wfVtV61hyROdj0zFIPCHN3FnoD6bQFxhj
        zcnXIlhoFxRuqWhhYgpuJvZLol9FL3H5VDhHVPP2HV7+tcmqkpciWGwXTNtU/h4buVvRmbco4ojrSpux
        9tQbs9vqE6/MopXFTVhxrAnLjzaKYO4/7wJ/mCGPRm5XDuWSyHzZVcYli6QrkTdSzvJF8BcLOavllx+K
        CQAAAABJRU5ErkJggm0DAACJUE5HDQoaCgAAAA1JSERSAAAAEAAAABAIBgAAAB/z/2EAAAABc1JHQgCu
        zhzpAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3Cc
        ulE8AAAC60lEQVQ4T31TW0gUURg+/+zcZ1dnZmd2vSyt99RFi4SMVAorfOhiUZQoFZEPmtANIoN6kMob
        RRiV3SjNECs1QonoZmaEmT2klZZkBYWIFfUUEXL6zy6GGfRwYPb7v+/7r0t6ExNJP773gUDqw4QET73H
        Q8pdLlKqKKRIEMgajiMrAf56hBBgj+GkOy6ODKemFo6npb0aCwSabvr9SSxYLEmkgOfJqn/FXJ1uxF2z
        rCzkOUhzVJT/tt/fNZKcTMcDAfoxJaUFsQAGuXUOx8zM/DnTzHkaGXmj0unsXQwQjzwCR01z46WIiIH+
        2Fg6hkajSUmtZ2w7nZkEywyVLDS53flPIiJ7KjVtYhnAHsREUmMYjMDt1LQVh3S9+57PRz/Fx9PhmJj2
        I7o+B2M8I7Z57M19Xu/zSlWdWAKwFzElaFzudJLdqho02SAI2WWy3Nlq2/SD308Hfb52NM3osO0dz2x7
        tEpRPucC7EMuE4SGWCLLpFgUySacOBtKLselr+f5louGQd9FR9MXXu/AS9v+Uqep31B8ADnaVGtBgyKc
        dAEOay2uKz/Ur2MeQGK109kw4vHQEaxm2LJ+VavqCYyFTxcHDdiep6+KESyOC3/gNk8N29Zkhx5OB0yT
        3tX1tnxBmM1mMv0uZq6JyxNFzyO3++Qby6LHNW0yD6CvSpZ/9IWF0VsuV3OmwzGLVTll8seAZS6UJF+P
        aZ5/jeLTmkaXAtQjHr0IoLZCFL8/djrpdUVplAixp0yCBuzHVkmK6THMxiHTTS+oKl3OcQ0WIV62f9Z7
        NsDh/YLwtVtVaJMsn0UMw3iJLPMWSYrtMYzLQ6ZBm1C8muOu4ImxKwv2yzj49IUAB8t5fuKOovysEcVj
        iIWRVABtlyjWdmGPV7Fs3EhnAGAuy/zXsELZzAUAFdt5fnwbzw+ilvEIj/stKeb5tyi+jyvMQUyc+Q+c
        VomZCVCGRqXIczEDVqOcBZA7HyADv3FGoSv7j4nMNKy132Qzvg/K9vuJAAAAAElFTkSuQmCCCw==
</value>
  </data>
</root>